<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.colodoo.manager.needs.service.NeedsMapper">
  <resultMap id="BaseResultMap" type="com.colodoo.manager.needs.model.Needs">
    <id column="needs_id" jdbcType="VARCHAR" property="needsId" />
    <result column="needs_name" jdbcType="VARCHAR" property="needsName" />
    <result column="needs_status" jdbcType="VARCHAR" property="needsStatus" />
    <result column="needs_step" jdbcType="VARCHAR" property="needsStep" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.colodoo.manager.needs.model.Needs">
    <result column="needs_content" jdbcType="LONGVARCHAR" property="needsContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    needs_id, needs_name, needs_status, needs_step, create_time, create_user_id, update_time, 
    update_user_id, remark
  </sql>
  <sql id="Blob_Column_List">
    needs_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.colodoo.manager.needs.model.NeedsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from needs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.colodoo.manager.needs.model.NeedsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from needs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from needs
    where needs_id = #{needsId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from needs
    where needs_id = #{needsId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.colodoo.manager.needs.model.NeedsExample">
    delete from needs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.colodoo.manager.needs.model.Needs">
    insert into needs (needs_id, needs_name, needs_status, 
      needs_step, create_time, create_user_id, 
      update_time, update_user_id, remark, 
      needs_content)
    values (#{needsId,jdbcType=VARCHAR}, #{needsName,jdbcType=VARCHAR}, #{needsStatus,jdbcType=VARCHAR}, 
      #{needsStep,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{needsContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.colodoo.manager.needs.model.Needs">
    insert into needs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="needsId != null">
        needs_id,
      </if>
      <if test="needsName != null">
        needs_name,
      </if>
      <if test="needsStatus != null">
        needs_status,
      </if>
      <if test="needsStep != null">
        needs_step,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="needsContent != null">
        needs_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="needsId != null">
        #{needsId,jdbcType=VARCHAR},
      </if>
      <if test="needsName != null">
        #{needsName,jdbcType=VARCHAR},
      </if>
      <if test="needsStatus != null">
        #{needsStatus,jdbcType=VARCHAR},
      </if>
      <if test="needsStep != null">
        #{needsStep,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="needsContent != null">
        #{needsContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.colodoo.manager.needs.model.NeedsExample" resultType="java.lang.Long">
    select count(*) from needs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update needs
    <set>
      <if test="record.needsId != null">
        needs_id = #{record.needsId,jdbcType=VARCHAR},
      </if>
      <if test="record.needsName != null">
        needs_name = #{record.needsName,jdbcType=VARCHAR},
      </if>
      <if test="record.needsStatus != null">
        needs_status = #{record.needsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.needsStep != null">
        needs_step = #{record.needsStep,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.needsContent != null">
        needs_content = #{record.needsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update needs
    set needs_id = #{record.needsId,jdbcType=VARCHAR},
      needs_name = #{record.needsName,jdbcType=VARCHAR},
      needs_status = #{record.needsStatus,jdbcType=VARCHAR},
      needs_step = #{record.needsStep,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      needs_content = #{record.needsContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update needs
    set needs_id = #{record.needsId,jdbcType=VARCHAR},
      needs_name = #{record.needsName,jdbcType=VARCHAR},
      needs_status = #{record.needsStatus,jdbcType=VARCHAR},
      needs_step = #{record.needsStep,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.colodoo.manager.needs.model.Needs">
    update needs
    <set>
      <if test="needsName != null">
        needs_name = #{needsName,jdbcType=VARCHAR},
      </if>
      <if test="needsStatus != null">
        needs_status = #{needsStatus,jdbcType=VARCHAR},
      </if>
      <if test="needsStep != null">
        needs_step = #{needsStep,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="needsContent != null">
        needs_content = #{needsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where needs_id = #{needsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.colodoo.manager.needs.model.Needs">
    update needs
    set needs_name = #{needsName,jdbcType=VARCHAR},
      needs_status = #{needsStatus,jdbcType=VARCHAR},
      needs_step = #{needsStep,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      needs_content = #{needsContent,jdbcType=LONGVARCHAR}
    where needs_id = #{needsId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.colodoo.manager.needs.model.Needs">
    update needs
    set needs_name = #{needsName,jdbcType=VARCHAR},
      needs_status = #{needsStatus,jdbcType=VARCHAR},
      needs_step = #{needsStep,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where needs_id = #{needsId,jdbcType=VARCHAR}
  </update>
</mapper>